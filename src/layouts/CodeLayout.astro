---
import {SEO} from "astro-seo";
import {createOgImage} from "@utils/createOgImage";
import "../styles/main.scss";
import Navbar from "@components/navbar/navbar.astro";

export interface Props {
  title: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const {title} = Astro.props;

const ogImage = createOgImage({
  title: "Muhamad Rizky",
  meta: "Designer, Frontend Craftsman, and Web3 Enthusiast.",
});

const description =
  "Hi! I'm a Front End Craftsman dedicated to crafting a beautiful UI and enhancing Web Performance";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="24x24 32x32 48x48 57x57 64x64 72x72 114x114 120x120 144x144 152x152" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link
      rel="stylesheet"
      href="https://unpkg.com/highlightjs-copy@1.0.3/dist/highlightjs-copy.min.css"
    />
    <meta name="generator" content={Astro.generator} />

    <SEO
    title={title}
    description={description}
    canonical={canonicalURL}
    twitter={{
      creator: "@Ioofyy",
      site: "@rizkyy.dev",
      card: "summary_large_image",
    }}
    openGraph={{
      basic: {
        url: canonicalURL,
        type: "website",
        title: "Muhamad Rizky",
        image: ogImage,
      },
      optional: {
        description,
        siteName: "rizkyy.dev",
      },
      image: {
        alt: title,
      },
    }}
  />
  </head>
  <body>
    <Navbar/>
    <div class="noise-bg"></div>
    <slot />

    {
      import.meta.env.PROD ? (
        <Fragment>
          <script
            async
            strategy="afterInteractive"
            type="text/javascript"
            src="https://umami.rizkyy.dev/script.js"
            data-website-id="67b6272c-99cf-409a-8950-f6bad8cf296f"
          />
          <script type="text/javascript" is:inline>
            {(function (c, l, a, r, i, t, y) {
              c[a] =
                c[a] ||
                function () {
                  (c[a].q = c[a].q || []).push(arguments);
                };
              t = l.createElement(r);
              t.async = 1;
              t.src = "https://www.clarity.ms/tag/" + i;
              y = l.getElementsByTagName(r)[0];
              y.parentNode.insertBefore(t, y);
            })(window, document, "clarity", "script", "hyy9i9hhxy")}
          </script>
        </Fragment>
      ) : null
    }

    <script is:inline>
      const theme = (() => {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches)
          return "dark";

        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.add("light");
        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "/css/hljs-xcode.css";
        document.head.appendChild(link);
      } else {
        document.documentElement.classList.add("dark");

        var link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = "/css/hljs-github-dark.css";
        document.head.appendChild(link);
      }
    </script>
  </body>
</html>
