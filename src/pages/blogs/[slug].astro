---
import {type z} from "astro:content";
import {
  type PostType,
  type PostDetailType,
  graphqlFetch,
  replaceImageContent,
} from "@utils/common";
import {parseTime} from "@utils/parse";
import {Picture} from "@astrojs/image/components";
import {postQuery, postDetailQuery} from "@graphql/query";
import {markdown} from "@astropub/md";
import Container from "@components/container.astro";
import BlogLayout from "@layouts/BlogLayout.astro";

type PostQueryType = z.infer<typeof PostType>;
type DetailPostQueryType = z.infer<typeof PostDetailType>;

export async function getStaticPaths() {
  const {data} = await graphqlFetch<PostQueryType>({
    query: postQuery,
  });

  return data.postsConnection.edges.map((item) => ({
    params: {slug: item.node.slug},
  }));
}

const {slug} = Astro.params;

const {
  data: {post},
} = await graphqlFetch<DetailPostQueryType>({
  query: postDetailQuery,
  variables: {slug},
});

const date = parseTime(post.createdAt);
const html = await markdown(post.content);

const updatedHtmlContent = replaceImageContent(html.toString());
---

<BlogLayout title={post.title} description={post.excerpt} date={date}>
  <Container>
    <div class="mt-20 text-purple-400 flex space-x-2 items-center">
      {
        post.categories.map((category) => (
          <span class="text-sm">#{category.name}</span>
        ))
      }
    </div>
    <h1 class="text-4xl xsm:text-3xl my-1 font-bold font-playfair">
      {post.title}
    </h1>
    <div class="meta mb-10">
      <div class="meta-content my-2 flex justify-between text-gray-400">
        <div class="meta-inline text-[15px]">
          <div>
            By Riz on
            <time class="meta-time">{date}</time>
          </div>
        </div>
        <a href="/blogs">Back</a>
      </div>
    </div>

    <div>
      <div class="meta-image">
        <Picture
          src={post.thumbnailImage.url}
          alt="thumbnail-post"
          sizes="(max-width: 800px) 100vw, 800px"
          widths={[200, 400, 800]}
          aspectRatio="16:9"
          fit="cover"
          position="center"
          format="webp"
          loading="eager"
          class="w-full rounded-md"
        />
      </div>
    </div>
    <div class="blog-prose mt-10">
      <Fragment set:html={updatedHtmlContent} />
    </div>

    {
      import.meta.env.PROD ? (
        <script
          src="https://giscus.app/client.js"
          data-repo="ioofy/rizkyy.dev"
          data-repo-id="R_kgDOJ7KWXQ"
          data-category="General"
          data-category-id="DIC_kwDOJ7KWXc4CX4Ft"
          data-mapping="pathname"
          data-strict="0"
          data-reactions-enabled="1"
          data-emit-metadata="0"
          data-input-position="bottom"
          data-theme="preferred_color_scheme"
          data-lang="en"
          data-loading="lazy"
          crossorigin="anonymous"
          async
        />
      ) : null
    }
  </Container>
</BlogLayout>

<script src="/js/highlight.min.js" is:inline></script>
<script is:inline>
  hljs.highlightAll();
</script>
